name: 'publish'

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm-based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel-based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # Install Rust stable
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Targets are only required on macOS runners
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # Install additional dependencies for Ubuntu (if needed)
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          cd src
          npm install # Use npm, yarn, pnpm, or bun depending on your preference.

      # Build Next.js application
      - name: Build Next.js app
        run: |
          cd src
          npm run build

      # Build the Tauri app
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # The action automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          projectPath: ./src-tauri # Points to your Tauri directory
          args: ${{ matrix.args }}

      # Upload artifacts (optional)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Tauri-Application
          path: ./src-tauri/target/release/bundle/
